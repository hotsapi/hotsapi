### Replaces builder pattern with a named multi-stage build
### building heroprotocol -> parser -> hotsapi sequentially in a single container
## heroprotocol (base image)
FROM ubuntu:16.04 AS heroprotocol

RUN apt update && \
	apt install -y python git && \
	rm -rf /var/lib/apt/lists/*

WORKDIR /opt/heroprotocol
RUN git clone https://github.com/hotsapi/heroprotocol.git /opt/heroprotocol
RUN ln -s /opt/heroprotocol/heroprotocol.py /usr/bin/heroprotocol
ENTRYPOINT ['heroprotocol']


## Build parser image off heroprotocol/base
FROM heroprotocol AS parser

RUN apt update && \
	  apt install -y git curl apt-transport-https software-properties-common && \
	  rm -rf /var/lib/apt/lists/*
RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg
RUN echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main" > /etc/apt/sources.list.d/dotnetdev.list
RUN apt update && \
	  apt install -y dotnet-runtime-2.0.0 && \
	  rm -rf /var/lib/apt/lists/*

WORKDIR /opt/hotsapi-parser
RUN curl https://s3-eu-west-1.amazonaws.com/hotsapi-public/Hotsapi.Parser/master/latest/parser.tar.gz > parser.tar.gz && \
    tar -xzf parser.tar.gz && \
    rm parser.tar.gz
RUN ln -s /opt/hotsapi-parser/parser.sh /usr/bin/hotsapi-parser
ENTRYPOINT ['hotsapi-parser']


## build API image off parser/protocol image
FROM parser AS hotsapi

ENV LANG C.UTF-8
RUN add-apt-repository -y ppa:ondrej/php && \
    gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv 4F4EA0AAE5267A6C && \
    gpg --export --armor 4F4EA0AAE5267A6C | apt-key add - && \
    apt -y update && \
	apt install -y git curl zip unzip php7.4 php7.4-mysql php7.4-zip php7.4-gd php7.4-mbstring php7.4-xml php7.4-curl php7.4-json && \
	apt install -y php-memcached && \
	rm -rf /var/lib/apt/lists/*

RUN apt update && \
	apt install -y php7.4-fpm nginx supervisor && \
	rm -rf /var/lib/apt/lists/*

RUN curl -s https://getcomposer.org/download/1.9.1/composer.phar --output /usr/bin/composer && \
    echo "1f210b9037fcf82670d75892dfc44400f13fe9ada7af9e787f93e50e3b764111 /usr/bin/composer" | sha256sum -c && \
    chmod 755 /usr/bin/composer

RUN composer global require hirak/prestissimo

WORKDIR /var/www/hotsapi
COPY composer.json composer.lock ./
RUN composer install --prefer-dist --no-scripts --no-dev --no-autoloader && rm -rf /root/.composer

RUN sed -i 's/upload_max_filesize = .*/upload_max_filesize = 30M/g' /etc/php/7.4/fpm/php.ini && \
    sed -i 's/post_max_size = .*/post_max_size = 30M/g' /etc/php/7.4/fpm/php.ini  && \
    sed -i 's/;clear_env = .*/clear_env = no/g' /etc/php/7.4/fpm/pool.d/www.conf  && \
    sed -i 's/pm.max_children = .*/pm.max_children = 10/g' /etc/php/7.4/fpm/pool.d/www.conf
RUN mkdir /var/run/php
COPY docker/nginx.conf /etc/nginx
COPY docker/supervisord.conf /etc/supervisor

COPY . .
# RUN chown -R www-data:www-data .
RUN chmod -R a+w storage && chmod -R a+w bootstrap/cache
RUN composer dump-autoload --no-scripts --no-dev --optimize
EXPOSE 80
ENTRYPOINT ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/supervisord.conf"]
